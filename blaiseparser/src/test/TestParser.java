/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * TestParser.java
 *
 * Created on Apr 24, 2009, 10:37:54 AM
 */

package test;

import java.awt.Color;
import java.awt.Component;
import java.util.TreeMap;
import javax.swing.JTree;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeCellRenderer;
import javax.swing.tree.DefaultTreeModel;
import org.apache.commons.math.FunctionEvaluationException;
import scribo.parser.FunctionSyntaxException;
import scribo.tree.*;

/**
 *
 * @author ae3263
 */
public class TestParser extends javax.swing.JFrame {

    /** Creates new form TestParser */
    public TestParser() {
        initComponents();
        jTextField1DocumentChange(null);
        jTextField1.getDocument().addDocumentListener(new DocumentListener(){
            public void insertUpdate(DocumentEvent e){jTextField1DocumentChange(e);}
            public void removeUpdate(DocumentEvent e){jTextField1DocumentChange(e);}
            public void changedUpdate(DocumentEvent e){jTextField1DocumentChange(e);}
        });
        jTextField3.getDocument().addDocumentListener(new DocumentListener(){
            public void insertUpdate(DocumentEvent e){jTextField1DocumentChange(e);}
            public void removeUpdate(DocumentEvent e){jTextField1DocumentChange(e);}
            public void changedUpdate(DocumentEvent e){jTextField1DocumentChange(e);}
        });
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        functionTreeRoot1 = new scribo.tree.FunctionTreeRoot();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jSplitPane1 = new javax.swing.JSplitPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTree3 = new javax.swing.JTree();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTree4 = new javax.swing.JTree();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTree2 = new javax.swing.JTree();
        jLabel4 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Parser Test Frame");

        jLabel1.setText("Function:");

        jTextField1.setText("cos(x)");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Variables:");

        jTextField2.setEditable(false);

        jLabel3.setText("OK");

        jSplitPane1.setDividerLocation(300);
        jSplitPane1.setDividerSize(15);
        jSplitPane1.setResizeWeight(0.5);
        jSplitPane1.setOneTouchExpandable(true);

        jScrollPane1.setViewportView(jTree1);

        jSplitPane1.setLeftComponent(jScrollPane1);

        jScrollPane3.setViewportView(jTree3);

        jTabbedPane1.addTab("Simplified", jScrollPane3);

        jScrollPane4.setViewportView(jTree4);

        jTabbedPane1.addTab("Recycled", jScrollPane4);

        jScrollPane2.setViewportView(jTree2);

        jTabbedPane1.addTab("Derivative", jScrollPane2);

        jSplitPane1.setRightComponent(jTabbedPane1);

        jLabel4.setText("Parm values:");

        jTextField3.setText("1");

        jLabel5.setText("Output:");

        jTextField4.setEditable(false);
        jTextField4.setFont(new java.awt.Font("Tahoma", 1, 18));
        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });

        jLabel6.setText("Parameters:");

        jTextField5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField5ActionPerformed(evt);
            }
        });

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel7.setText("Var values:");

        jTextField6.setText("0");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jLabel3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 750, Short.MAX_VALUE)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                        .add(jLabel6)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jTextField5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 71, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel2)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jTextField2))
                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                        .add(jLabel1)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 241, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jSeparator1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jLabel4)
                    .add(jLabel7))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jTextField6)
                    .add(jTextField3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel5)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jTextField4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 235, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .add(jSplitPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 750, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel1)
                            .add(jTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel4)
                            .add(jTextField3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                .add(jLabel6)
                                .add(jTextField5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(jLabel2)
                                .add(jTextField2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                .add(jTextField6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(jLabel7))))
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel5)
                            .add(jTextField4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 38, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(jSeparator1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 48, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jSplitPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 369, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 14, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4ActionPerformed

    private void jTextField5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField5ActionPerformed

    private void jTextField1DocumentChange(DocumentEvent evt) {
        FunctionTreeRoot ftr2;
        try {
            ftr2 = new FunctionTreeRoot(jTextField1.getText());
            functionTreeRoot1 = ftr2;
            jTextField2.setText(functionTreeRoot1.getUnknowns().toString());
            jLabel3.setText("OK");
            jLabel3.setForeground(Color.BLACK);
            jTextField1.setForeground(Color.BLACK);
            buildTree();
        } catch (FunctionSyntaxException e) {
            jLabel3.setText(e.getMessage());
            jLabel3.setForeground(Color.RED);
            jTextField1.setForeground(Color.RED);
            return;
        }
        try {
            TreeMap<String,Double> vars = new TreeMap<String,Double>();
            jTextField4.setText(functionTreeRoot1.getValue(vars).toString());
            jTextField4.setForeground(Color.BLACK);
        } catch (FunctionEvaluationException ex) {
            jTextField4.setForeground(Color.RED);
        }
    }

    private void buildTree() {
        jTree1.setModel(new DefaultTreeModel(functionTreeRoot1.getTreeNode()));
        jTree1.setCellRenderer(RENDERER);
        for(int i=0;i<5;i++){
            for(int j=0;j<100;j++){
                jTree1.expandRow(j);
            }
        }
        jTree2.setModel(new DefaultTreeModel(functionTreeRoot1.derivativeTree("x").fullSimplified().getTreeNode()));
        jTree2.setCellRenderer(RENDERER);
        for(int i=0;i<5;i++){
            for(int j=0;j<100;j++){
                jTree2.expandRow(j);
            }
        }
        try { // simplified
            jTree3.setModel(new DefaultTreeModel(functionTreeRoot1.fullSimplified().getTreeNode()));
            jTree3.setCellRenderer(RENDERER);
            for(int i=0;i<5;i++){
                for(int j=0;j<100;j++){
                    jTree3.expandRow(j);
                }
            }
            jTree3.setBackground(Color.WHITE);
        } catch (Exception ex) {
            jTree3.setBackground(Color.BLACK);
        }
        try { // recycled
            jTree4.setModel(new DefaultTreeModel(new FunctionTreeRoot(((FunctionTreeRoot)functionTreeRoot1.fullSimplified()).argumentString()).getTreeNode()));
            jTree4.setCellRenderer(RENDERER);
            for(int i=0;i<5;i++){
                for(int j=0;j<100;j++){
                    jTree4.expandRow(j);
                }
            }
            jTree4.setBackground(Color.WHITE);
        } catch (Exception ex) {
            jTree4.setBackground(Color.BLACK);
        }
    }

    final static DefaultTreeCellRenderer RENDERER = new DefaultTreeCellRenderer(){
        @Override
        public Component getTreeCellRendererComponent(JTree tree, Object value, boolean sel, boolean expanded, boolean leaf, int row, boolean hasFocus) {
            super.getTreeCellRendererComponent(tree, value, sel, expanded, leaf, row, hasFocus);
            FunctionTreeNode obj = (FunctionTreeNode) ((DefaultMutableTreeNode)value).getUserObject();
            if (obj instanceof FunctionRoot) {
                setForeground(Color.LIGHT_GRAY);
            } else if (obj instanceof Constant) {
                setForeground(Color.GREEN.darker());
            } else if (obj instanceof Variable) {
                setForeground(Color.BLUE);
            } else if (obj instanceof Piecewise) {
                setForeground(Color.ORANGE);
            } else if (obj instanceof Series) {
                setForeground(Color.ORANGE);
            } else if (obj instanceof Differentiator) {
                setForeground(Color.PINK);
            } else if (obj instanceof Operation) {
                setForeground(Color.ORANGE.darker());
            } else if (obj instanceof ArgumentList) {
                setForeground(Color.MAGENTA);
            }
            return this;
        }
    };

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TestParser().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private scribo.tree.FunctionTreeRoot functionTreeRoot1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTree jTree1;
    private javax.swing.JTree jTree2;
    private javax.swing.JTree jTree3;
    private javax.swing.JTree jTree4;
    // End of variables declaration//GEN-END:variables

}
